import sys, pandas

COINPAIRS = [
    'HOTBTC', 'NPXSBTC', 'BCNBTC', 'DENTBTC', 'NCASHBTC', 'KEYBTC', 'SCBTC', 'MFTBTC', 'STORMBTC', 'TNBBTC', 'POEBTC', 'IOSTBTC', 'VETBTC', 'PHXBTC', 'IOTXBTC', 'FUNBTC', 'XVGBTC', 'LENDBTC',
    'CDTBTC', 'FUELBTC', 'RPXBTC', 'DOCKBTC', 'CHATBTC', 'CNDBTC', 'SNGLSBTC', 'DNTBTC', 'TRXBTC', 'RCNBTC', 'TNTBTC', 'MTHBTC', 'WPRBTC', 'YOYOBTC', 'GOBTC', 'DATABTC', 'ZILBTC', 'QSPBTC', 'SNTBTC',
    'OSTBTC', 'VIBBTC', 'REQBTC', 'AGIBTC', 'ENJBTC', 'QLCBTC', 'SNMBTC', 'QKCBTC', 'GTOBTC', 'DLTBTC', 'MANABTC', 'VIBEBTC', 'POABTC', 'ADABTC', 'SYSBTC', 'BCPTBTC', 'THETABTC', 'ASTBTC', 'XEMBTC',
    'APPCBTC', 'LRCBTC', 'BTSBTC', 'LOOMBTC', 'SUBBTC', 'ARDRBTC', 'CVCBTC', 'CMTBTC', 'BLZBTC', 'AMBBTC', 'WINGSBTC', 'GNTBTC', 'POWRBTC', 'BATBTC', 'POLYBTC', 'WABIBTC', 'OAXBTC', 'ADXBTC',
    'XLMBTC', 'STORJBTC', 'TRIGBTC', 'LINKBTC', 'NAVBTC', 'BQXBTC', 'ELFBTC', 'BRDBTC', 'INSBTC', 'ICNBTC', 'RLCBTC', 'KNCBTC', 'AIONBTC', 'XRPBTC', 'EVXBTC', 'ARNBTC', 'GRSBTC', 'RDNBTC', 'IOTABTC',
    'SALTBTC', 'VIABTC', 'ENGBTC', 'ICXBTC', 'MODBTC', 'MTLBTC', 'MDABTC', 'ARKBTC', 'ZRXBTC', 'NXSBTC', 'STEEMBTC', 'TUSDBTC', 'PAXBTC', 'EDOBTC', 'AEBTC', 'WANBTC', 'PIVXBTC', 'KMDBTC', 'NULSBTC',
    'GXSBTC', 'BNTBTC', 'STRATBTC', 'VENBTC', 'NASBTC', 'ONTBTC', 'BCDBTC', 'NEBLBTC', 'WAVESBTC', 'NANOBTC', 'HCBTC', 'CLOAKBTC', 'WTCBTC', 'LSKBTC', 'PPTBTC', 'OMGBTC', 'QTUMBTC', 'LUNBTC',
    'SKYBTC', 'MCOBTC', 'HSRBTC', 'EOSBTC', 'GASBTC', 'XZCBTC', 'BNBBTC', 'GVTBTC', 'ETCBTC', 'REPBTC', 'ZENBTC', 'NEOBTC', 'BTGBTC', 'DGDBTC', 'LTCBTC', 'XMRBTC', 'ZECBTC', 'DASHBTC', 'ETHBTC',
    'BCCBTC'
]

COINPAIRS = ['BNBBTC']
HISTORY_STRUCTURE = [
    'INTERVAL', 'OPEN_TIME', 'OPEN', 'HIGH', 'LOW', 'CLOSE', 'VOLUME', 'CLOSE_TIME', 'QUOTE_ASSET_VOLUME', 'NUMBER_TRADES', 'TAKER_BASE_ASSET_VOLUME', 'TAKER_QUOTE_ASSET_VOLUME', 'IGNORE', 'MACD',
    'MACD_SIGNAL', 'MACD_DIFF', 'RSI', 'UPPERBAND', 'LOWERBAND'
]
BALANCES_STRUCTURE = ['ASSET', 'FREE']
ACTIONS_STRUCTURE = ['COINPAIR', 'TIME', 'USED', 'ACTION', 'QUANTITY', 'PRICE']
ORDERS_STRUCTURE = ['COINPAIR', 'ID', 'TIME', 'STATUS']

TIME_INTERVALS = ['5m', '15m', '30m', '1h', '2h', '4h']

PUBLIC_KEY = 'T3b7BCBqpPwxWT7vFpQzBP6IQ5qrLkY2pOAaBG3H0sXeLmYzLfx2hLNVpELTlvoK'
SECRET_KEY = 'ouJooSDGjuhR7M8JcfpCXog2yoZs33YYS3zngvDJDtzigfBrNBCKWUMbOP5x02Cx'

DB_NAME = 'test2'
DB_HOST = 'binance-bot.cfypif4yfq4f.us-east-1.rds.amazonaws.com'
DB_PORT = '3306'
DB_USER = 'epsenex'
DB_PASS = 'Minecraft#1PUBG#2'

# 240000ms = 4min
ACTION_RECENT = 240000
ORDER_TIME_LIMIT = 240000

# January 21, 2018 = 1516514400000
# June 1, 2018 = 1527829200000
# June 19, 2018 = 1529384400000
# June 24, 2018 = 1529816400000
HISTORY_START_DATE = 1516514400000        # The starting date, in milliseconds, that we import our historical data from.
BACKTEST_START_DATE = 1529816400000        # The starting date, in milliseconds, that we begin backtesting from.

ORDER_TIME_LIMIT = 11        # [1, 12] Integers = 12
STOP_LOSS_ARM = 1.03        # [1.010, 1.050] 3 Decimal Places = 40
STOP_LOSS = 0.005        # [0.001, 0.010] 3 Decimal Places = 10
DROP = 0.960        # [0.950, 0.980] 3 Decimal Places = 30
# 12 * 40 * 10 * 30 = 144,000

#[11, 8.8, 4.4]
#[5, 7.0, 4.0]
#[10, 7.1, 4.1]

#12, 7.0, 3.9
#11, 7.1, 2.9
TOP_THRESHOLD = 2.7
BOTTOM_THRESHOLD = 2.9
# BNB [5, 139, 173, 0.67, 0.93]
# ADA [5, 223, 203, 0.5, 0.5]
WINDOW = 139
TOP_WINDOW = 173
PERCENT = 0.67
TOP_PERCENT = 0.93

NUM_TRIGGERS = 4
TRIGGER_DECAY = 0.22
TRIGGER_THRESHOLD = 1.5
TRIGGER_0 = 10
TRIGGER_1 = 4
TRIGGER_2 = 0.32
TRIGGER_3 = 0.16


def set_optimized(otl, w, tw, p, tp):
    global ORDER_TIME_LIMIT
    ORDER_TIME_LIMIT = otl
    global WINDOW
    WINDOW = w
    global TOP_WINDOW
    TOP_WINDOW = tw
    global PERCENT
    PERCENT = p
    global TOP_PERCENT
    TOP_PERCENT = tp


def to_datetime(time):
    return pandas.to_datetime(time, unit='ms')
